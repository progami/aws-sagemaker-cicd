name: Pipeline

on:
  push:
    branches: [ dev ]
env:
  APPLICATION_NAME: startupapp

jobs:
  build-infra-terraform:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0
    
    # check the format of tf file
    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      run: terraform init
      # working-directory: "./environments/dev"
      env:
        GITHUB_TOKEN: ${{ secrets.SAGEMAKER_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # TF_ACTION_WORKING_DIR: 'terraform'
    
    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Apply
      run: terraform apply

    - name: Sync S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ format('{0}/{1}', secrets.BUCKET_NAME, secrets.PREFIX) }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-central-1'    # optional: defaults to us-east-1
        SOURCE_DIR: 's3'              # optional: defaults to entire repository

  build_image_push_to_ECR:
    needs: build-infra-terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # see: https://github.com/aws-actions/amazon-ecr-login
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        
  submit_training_job:
    needs: [build_image_push_to_ECR]
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml-py3:latest
    steps:
    - uses: actions/checkout@v3
    - name: Fire SageMaker
      id: sm_train
      env:
        repo_token: ${{ secrets.SAGEMAKER_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PREFIX: ${{ secrets.PREFIX }}
        IAM_ROLE_NAME: ${{ secrets.IAM_ROLE_NAME }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        pip install --no-cache-dir --upgrade awscli pandas boto3 sagemaker requests fsspec s3fs tabulate
        python training-job.py
        cat details.txt >> report.md
        cml-send-comment report.md 
